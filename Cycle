//How do you check if a given linked list contains a cycle? 
#include <stdio.h>
#include <stdlib.h>
 
typedef struct Node {
    int key;
    struct Node* next;
} Node;
 
Node* newNode(int key)
{
    Node* temp = (Node*)malloc(sizeof(Node));
    temp->key = key;
    temp->next = NULL;
    return temp;
}
void printList(Node* head)
{
    while (head != NULL) {
        printf("%d  ",head->key);
        head = head->next;
    }
    printf("/n");
}
 
Node* detectAndRemoveLoop(Node* head)
{
    if (head == NULL || head->next == NULL)
        return NULL;
 
    Node *slow = head, *fast = head;
 
    slow = slow->next;
    fast = fast->next->next;
 
    while (fast && fast->next) {
        if (slow == fast)
            break;
        slow = slow->next;
        fast = fast->next->next;
    }
 
    if (slow != fast)
        return NULL;
 
    slow = head;
    while (slow != fast) {
        slow = slow->next;
        fast = fast->next;
    }
 
    return slow;
}
 
int main()
{
    Node* head = newNode(50);
    head->next = newNode(20);
    head->next->next = newNode(15);
    head->next->next->next = newNode(4);
    head->next->next->next->next = newNode(10);
 
    head->next->next->next->next->next = head->next->next;
 
    Node* res = detectAndRemoveLoop(head);
    if (res == NULL)
        printf("Loop does not exist");
    else
        printf("Loop starting node is %d ",res->key);
 
    return 0;
}
